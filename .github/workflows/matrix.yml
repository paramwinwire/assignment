name: Matrix Build 

on:
  workflow_dispatch:
    inputs:
      trigger:
        description: 'Trigger the workflow manually'
        required: true
        default: 'Start'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        configuration: [Development, Release]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x' # or the version you are using

      - name: Build Project
        run:  |
              cd AssignmentApp
              pwd
              ls  
              # dotnet build -c ${{ matrix.config }}
              dotnet build --configuration ${{ matrix.configuration }}  -o ./dep
              ls
              dotnet test
      - name: Deploy
        id: deploy
        run: |
          if [ "${{ matrix.configuration }}" = "Release" ] && [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            echo "Deploying on Ubuntu for Release configuration"
            echo "Deploying"
            echo "::set-output name=deploy_success::true"
          else
            echo "Skipping deployment"
            echo "::set-output name=deploy_success::false"
          fi
        if: matrix.configuration == 'Release' && matrix.os == 'ubuntu-latest'

      - name: Send Email on Successful Deploy
        if: steps.deploy.outputs.deploy_success == 'true'
        uses: cinotify/github-action@main
        with:
          to: ${{ secrets.EMAIL_TO }}  #enter an email address to which the notification needs to be sent
          subject: 'Deployment Successful'
          body: |
            Hey ${{github.actor}}! The deployment on ${{ matrix.os }} for configuration ${{ matrix.configuration }} and runtime ${{ matrix.runtime }} was successful.

  notify-slack:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'learn-github-actions'
          slack-message: "GitHub build result : ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
          
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
